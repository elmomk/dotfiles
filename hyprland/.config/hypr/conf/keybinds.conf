$mainMod = SUPER
$home = /home/salomo

# Media Controls
bindel = , XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindel = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindl = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bind = , XF86MonBrightnessUp, exec, brightnessctl set +25%
bind = , XF86MonBrightnessDown, exec, brightnessctl set 25%-

# Screenshot and Screen Recording
bind = , Print, exec, grim -g "$(slurp -d)" - | swappy -f -
bind = $mainMod SHIFT, Print, exec, $home/bin/qrcode.sh
bind = CTRL, Print, exec, hyprshot -m region --clipboard-only
bind = $mainMod, Print, exec, hyprshot -m region

# Application Launchers
bind = $mainMod, v, exec, pavucontrol
bind = $mainMod SHIFT, Return, exec, thunar
bind = $mainMod, Return, exec, alacritty -e ~/bin/tmux-fzf
bind = $mainMod CTRL, Return, exec, alacritty
bind = $mainMod SHIFT, space, exec, pkill wofi || wofi --show drun
bind = $mainMod, space, exec, walker

# Gemini Browser
bind = $mainMod, g, exec, brave --app=https://gemini.google.com --enable-features=UseOzonePlatform --ozone-platform=wayland

# Custom Scripts
bind = SUPER SHIFT, n, exec, pkill waybar; waybar&
bind = $mainMod SHIFT, v, exec, $home/bin/easy.sh
bind = $mainMod, B, exec, $home/bin/blueblue.sh
bind = $mainMod SHIFT, B, exec, $home/bin/blueblue.sh true

# Clipboard Management
bind = $mainMod, y, exec, pkill wofi || cliphist list | $home/bin/my-cliphist-parser.sh | wofi --dmenu --allow-images | awk '{ if (substr($0, 1, 4) == "img:") { match($0, /\/([0-9]+)\.png:/, id_array); printf "%s", id_array[1]; } else { printf "%s", $1; } }' | cliphist decode | wl-copy
bind = $mainMod CTRL, y, exec, pkill wofi || SELECTED_ID=$(cliphist list | $home/bin/my-cliphist-parser.sh | wofi --dmenu --allow-images | awk '{ if (substr($0, 1, 4) == "img:") { match($0, /\/([0-9]+)\.png:/, id_array); printf "%s", id_array[1]; } else { printf "%s", $1; } }'); if [[ -n "$SELECTED_ID" ]]; then CLIP_CONTENT=$(cliphist decode "$SELECTED_ID"); if [[ "$CLIP_CONTENT" =~ ^\[\[[[:space:]]binary[[:space:]]data[[:space:]][0-9]+[[:space:]]KiB[[:space:]](png|jpeg|jpg|gif|webp|bmp)[[:space:]][0-9]+x[0-9]+[[:space:]]\]\]$ ]]; then echo -n "$CLIP_CONTENT" | wl-copy; else TEMP_FILE=$(mktemp); echo -n "$CLIP_CONTENT" > "$TEMP_FILE"; alacritty -e nvim "$TEMP_FILE"; MODIFIED_CONTENT=$(cat "$TEMP_FILE"); echo -n "$MODIFIED_CONTENT" | wl-copy; rm "$TEMP_FILE"; fi; fi

# System Controls
bind = $mainMod, R, exec, hyprctl reload
bind = $mainMod, Q, killactive
bind = $mainMod, M, exec, if [ $(pgrep wlogout) ]; then pkill wlogout; else $(wlogout);fi
bind = $mainMod CTRL ALT, X, exec, hyprctl notify 5 1000 "rgb(ff1ea3)" "shutting down" && systemctl poweroff 
bind = $mainMod CTRL ALT, L, exec, hyprlock
bind = CTRL ALT, X, exec, systemctl suspend
bind = $mainMod, n, exec, swaync-client -t

# Window Management
bind = $mainMod, F, fullscreen
bind = $mainMod, O, togglefloating
bind = $mainMod, W, focuscurrentorlast

# Resize Windows
bind = $mainMod CTRL, k, resizeactive, -200 -200
bind = $mainMod CTRL, J, resizeactive, 0 200
bind = $mainMod CTRL, h, resizeactive, -200 0
bind = $mainMod CTRL, l, resizeactive, 200 0

# Resize Submap
bind = ALT, R, submap, resize
submap = resize
binde = , right, resizeactive, 10 0
binde = , left, resizeactive, -10 0
binde = , up, resizeactive, 0 -10
binde = , down, resizeactive, 0 10
bindm = , mouse:272, resizewindow
bind = , escape, submap, reset
submap = reset

# Mouse Binds
bindm = $mainMod CTRL, mouse:272, movewindow
bindm = $mainMod SHIFT CTRL, mouse:272, resizewindow

# Window Navigation (hjkl)
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d

# Move Windows (Shift + hjkl)
bind = $mainMod SHIFT, H, movewindow, l
bind = $mainMod SHIFT, L, movewindow, r
bind = $mainMod SHIFT, K, movewindow, u
bind = $mainMod SHIFT, J, movewindow, d

# Workspace Navigation
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move Windows to Workspaces (Shift + 0-9)
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Move Windows to Workspaces Silently (Ctrl + 0-9)
bind = $mainMod CTRL, 1, movetoworkspacesilent, 1
bind = $mainMod CTRL, 2, movetoworkspacesilent, 2
bind = $mainMod CTRL, 3, movetoworkspacesilent, 3
bind = $mainMod CTRL, 4, movetoworkspacesilent, 4
bind = $mainMod CTRL, 5, movetoworkspacesilent, 5
bind = $mainMod CTRL, 6, movetoworkspacesilent, 6
bind = $mainMod CTRL, 7, movetoworkspacesilent, 7
bind = $mainMod CTRL, 8, movetoworkspacesilent, 8
bind = $mainMod CTRL, 9, movetoworkspacesilent, 9
bind = $mainMod CTRL, 0, movetoworkspacesilent, 10

# Special Workspaces
# Line
bind = $mainMod, s, togglespecialworkspace, line
bind = $mainMod SHIFT, s, movetoworkspace, special:line
bind = $mainMod CTRL, s, movetoworkspacesilent, special:line

# Gemini
bind = $mainMod, u, togglespecialworkspace, gemini
bind = $mainMod SHIFT, u, movetoworkspace, special:gemini
bind = $mainMod CTRL, u, movetoworkspacesilent, special:gemini

# RSS
bind = $mainMod, i, togglespecialworkspace, rss
bind = $mainMod SHIFT, i, movetoworkspace, special:rss
bind = $mainMod CTRL, i, movetoworkspacesilent, special:rss

# Terminal
bind = $mainMod, p, togglespecialworkspace, term
bind = $mainMod SHIFT, p, movetoworkspace, special:term
bind = $mainMod CTRL, p, movetoworkspacesilent, special:term

# Workspace Navigation (Mouse and Keyboard)
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1
bind = $mainMod, TAB, workspace, e+1
bind = $mainMod SHIFT, TAB, workspace, e-1

# Zoom Controls
binde = $mainMod, equal, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor | awk '/^float.*/ {print $2 * 1.1}')
binde = $mainMod, minus, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor | awk '/^float.*/ {print $2 * 0.9}')


bindd = SUPER, BACKSPACE, Toggle window transparency, exec, hyprctl dispatch setprop "address:$(hyprctl activewindow -j | jq -r '.address')" opaque toggle
